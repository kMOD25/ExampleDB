// <auto-generated />
using System;
using Entitys.ModelEntity;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Entitys.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.6");

            modelBuilder.Entity("ModelEntity.Model.Levels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LevelsDescriptorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LevelsDescriptorId");

                    b.ToTable("Levels");
                });

            modelBuilder.Entity("ModelEntity.Model.LevelsDescriptors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descriptor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("LevelsDescriptors");
                });

            modelBuilder.Entity("ModelEntity.Model.Questions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("LevelsId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuestionAnswerId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("QuestionDescriptorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LevelsId");

                    b.HasIndex("QuestionAnswerId");

                    b.HasIndex("QuestionDescriptorId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("ModelEntity.Model.QuestionsAnswers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Answer")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("QuestionsAnswers");
                });

            modelBuilder.Entity("ModelEntity.Model.QuestionsDescriptors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descriptor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("QuestionsDescriptors");
                });

            modelBuilder.Entity("ModelEntity.Model.Levels", b =>
                {
                    b.HasOne("ModelEntity.Model.LevelsDescriptors", "LevelsDescriptor")
                        .WithMany()
                        .HasForeignKey("LevelsDescriptorId");

                    b.Navigation("LevelsDescriptor");
                });

            modelBuilder.Entity("ModelEntity.Model.Questions", b =>
                {
                    b.HasOne("ModelEntity.Model.Levels", null)
                        .WithMany("Questions")
                        .HasForeignKey("LevelsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ModelEntity.Model.QuestionsAnswers", "QuestionAnswer")
                        .WithMany()
                        .HasForeignKey("QuestionAnswerId");

                    b.HasOne("ModelEntity.Model.QuestionsDescriptors", "QuestionDescriptor")
                        .WithMany()
                        .HasForeignKey("QuestionDescriptorId");

                    b.Navigation("QuestionAnswer");

                    b.Navigation("QuestionDescriptor");
                });

            modelBuilder.Entity("ModelEntity.Model.Levels", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
